% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readParquet.R
\name{loadParquetData}
\alias{loadParquetData}
\title{Retrieve data from a DuckDB view and convert to Summarized Experiment}
\usage{
loadParquetData(con, data_type, uuids = NULL, custom_view = NULL)
}
\arguments{
\item{con}{DuckDB connection object of class 'duckdb_connection'}

\item{data_type}{Single string: value found in the data_type' column of
output_file_types() and also as the name of a view found in
DBI::dbListTables(con), indicating which view to collect data from.}

\item{uuids}{Vector of strings (optional): sample UUID(s) to get output for,
Default: NULL}

\item{custom_view}{Saved object with the initial class
'tbl_duckdb_connection' (optional): DuckDB tables/views can be accessed with
with the 'dplyr::tbl' function, and piped into additional functions such as
'dplyr::filter' prior to loading into memory with 'dplyr::collect'. A
particular sequence of function calls can be saved and provided to this
function for collection and formatting as a Summarized Experiment. See the
function example. Default: NULL}
}
\value{
A SummarizedExperiment object with process metadata, row data, column
names, and relevant assays.
}
\description{
'loadParquetData' accesses a view created
}
\details{
If 'custom_view' is provided, it must use the view indicated by
'data_type'.
}
\examples{
\dontrun{
if(interactive()){
prepared_db <- accessParquetData(dbdir = ":memory:")
DBI::dbListTables(prepared_db)
custom_filter <- tbl(prepared_db, "pathcoverage_unstratified") |>
               filter(`# Pathway` == "PWY-5686: UMP biosynthesis I")

se <- loadParquetData(con = prepared_db,
                      data_type = "pathcoverage_unstratified",
                      uuids = c("0807eb2a-a15e-4647-8e19-2600d8fda378",
                                "e0fbb54f-0249-4917-a4d7-bd68acb89c62"),
                      custom_view = custom_filter)
 }
}
}
\seealso{
\code{\link[DBI]{dbListTables}}
\code{\link[dplyr]{tbl}}, \code{\link[dplyr]{filter}}, \code{\link[dplyr]{compute}}
}
